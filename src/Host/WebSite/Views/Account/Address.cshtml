<div id="app">
    <div><button class="btn btn-primary" type="button" data-toggle="modal" data-target="#modal">New</button></div>
    <hr />
    <div class="card-columns">
        <div class="card" v-for="item in addresses">
            <div class="card-body">
                <p class="card-text">{{item.address1}}<br />{{item.address2}}<br />{{item.city}}<br />{{item.state}} {{item.zipCode}}</p>
                <button type="button" class="btn btn-danger" v-on:click="remove(item.id)">Delete</button>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">New Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <input type="text" class="form-control" v-model="address.Address1" placeholder="Address1" />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" v-model="address.Address2" placeholder="Address2" />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" v-model="address.City" placeholder="City" />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" v-model="address.State" placeholder="State" />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" v-model="address.ZipCode" placeholder="ZipCode" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="save">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                addresses: [],
                address: {}
            },
            methods: {
                loadData: function () {
                    var self = this;
                    $.get("/api/user/addresses", function (rs) {
                        self.addresses = rs;
                    });
                },
                save: function () {
                    var self = this;
                    $.post("/api/user/address", { Address: self.address }, function (rs) {

                        if ($.isSuccess(rs)) {
                            $('#modal').modal('hide');
                            self.loadData();
                        }
                        else {
                            bootbox.alert(rs);
                        }
                    });
                },
                remove: function (id) {
                    var self = this;
                    bootbox.confirm("Delete this address?", function (flag) {
                        if (flag) {
                            $.ajax({
                                url: '/api/user/address',
                                type: 'DELETE',
                                data: { "AddressID": id },
                                success: function (rs) {
                                    if ($.isSuccess(rs)) {
                                        self.loadData();
                                    }
                                    else {
                                        bootbox.alert(rs);
                                    }
                                }
                            });
                        }
                    });
                }
            }
        });

        $(function () {
            app.loadData();
        });
    </script>
}
